package cn.leolezury.eternalstarlight.init;

import cn.leolezury.eternalstarlight.EternalStarlight;
import cn.leolezury.eternalstarlight.entity.animal.Dryad;
import cn.leolezury.eternalstarlight.entity.animal.TwilightSquid;
import cn.leolezury.eternalstarlight.entity.attack.FireColumn;
import cn.leolezury.eternalstarlight.entity.attack.Vine;
import cn.leolezury.eternalstarlight.entity.attack.beam.StarlightGolemBeam;
import cn.leolezury.eternalstarlight.entity.boss.LunarMonstrosity;
import cn.leolezury.eternalstarlight.entity.boss.StarlightGolem;
import cn.leolezury.eternalstarlight.entity.boss.TheGatekeeper;
import cn.leolezury.eternalstarlight.entity.misc.*;
import cn.leolezury.eternalstarlight.entity.monster.LonestarSkeleton;
import cn.leolezury.eternalstarlight.entity.monster.NightshadeSpider;
import cn.leolezury.eternalstarlight.entity.npc.boarwarf.Boarwarf;
import cn.leolezury.eternalstarlight.entity.npc.boarwarf.golem.AstralGolem;
import cn.leolezury.eternalstarlight.entity.projectile.Spore;
import net.fabricmc.fabric.api.object.builder.v1.entity.FabricEntityTypeBuilder;
import net.fabricmc.fabric.api.objecter.v1.entity.FabricEntityTypeBuilder;
import net.minecraft.entity.EntityDimensions;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.SpawnGroup;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.resources.Identifier;
import net.minecraft.util.Identifier;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.entity.SpawnGroup;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

public class EntityInit {
    public static final EntityType<SLFallingBlock> FALLING_BLOCK = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"falling_block"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, SLFallingBlock::new).sized(0.98F, 0.98F).clientTrackingRange(10).updateInterval(20)("falling_block"));
    public static final EntityType<SLBoat> BOAT = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"boat"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, SLBoat::new).sized(1.375F, 0.5625F).clientTrackingRange(10).setShouldReceiveVelocityUpdates(true)("boat"));
    public static final EntityType<SLChestBoat> CHEST_BOAT = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"chest_boat"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, SLChestBoat::new).sized(1.375F, 0.5625F).clientTrackingRange(10).setShouldReceiveVelocityUpdates(true)("chest_boat"));
    public static final EntityType<CameraShake> CAMERA_SHAKE = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"camera_shake"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, CameraShake::new).sized(0f, 0f)(new Identifier(EternalStarlight.MODID, "camera_shake").toString()));
    public static final EntityType<Boarwarf> BOARWARF = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"boarwarf"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, Boarwarf::new).sized(0.6F, 1.99F).clientTrackingRange(8)(new Identifier(EternalStarlight.MODID, "boarwarf").toString()));
    public static final EntityType<AstralGolem> ASTRAL_GOLEM = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"astral_golem"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, AstralGolem::new).sized(0.5F, 1.25F)(new Identifier(EternalStarlight.MODID, "astral_golem").toString()));
    public static final EntityType<LonestarSkeleton> LONESTAR_SKELETON = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"lonestar_skeleton"), FabricEntityTypeBuilder.create(SpawnGroup.MONSTER, LonestarSkeleton::new).sized(0.6F, 1.99F).clientTrackingRange(8)(new Identifier(EternalStarlight.MODID, "lonestar_skeleton").toString()));
    public static final EntityType<NightshadeSpider> NIGHTSHADE_SPIDER = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"nightshade_spider"), FabricEntityTypeBuilder.create(SpawnGroup.MONSTER, NightshadeSpider::new).sized(0.7F, 0.5F).clientTrackingRange(8)(new Identifier(EternalStarlight.MODID, "nightshade_spider").toString()));
    public static final EntityType<TwilightSquid> TWILIGHT_SQUID = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"twilight_squid"), FabricEntityTypeBuilder.create(SpawnGroup.CREATURE ,TwilightSquid::new).sized(0.7F, 0.5F).clientTrackingRange(8)(new Identifier(EternalStarlight.MODID, "twilight_squid").toString()));
    public static final EntityType<Dryad> DRYAD = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"dryad"), FabricEntityTypeBuilder.create(SpawnGroup.CREATURE ,Dryad::new).sized(0.7F, 0.3F).clientTrackingRange(8)(new Identifier(EternalStarlight.MODID, "dryad").toString()));
    public static final EntityType<EyeOfSeeking> EYE_OF_SEEKING = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"eye_of_seeking"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, EyeOfSeeking::new).sized(0.25F, 0.25F).clientTrackingRange(4).updateInterval(4)(new Identifier(EternalStarlight.MODID, "eye_of_seeking").toString()));
    public static final EntityType<TheGatekeeper> THE_GATEKEEPER = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"the_gatekeeper"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, TheGatekeeper::new).sized(0.6f, 1.99f)(new Identifier(EternalStarlight.MODID, "the_gatekeeper").toString()));
    public static final EntityType<StarlightGolem> STARLIGHT_GOLEM = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"starlight_golem"), FabricEntityTypeBuilder.create(SpawnGroup.MONSTER, StarlightGolem::new).sized(2.5f, 2.5f).fireImmune()(new Identifier(EternalStarlight.MODID, "starlight_golem").toString()));
    public static final EntityType<LunarMonstrosity> LUNAR_MONSTROSITY = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"lunar_monstrosity"), FabricEntityTypeBuilder.create(SpawnGroup.MONSTER, LunarMonstrosity::new).sized(1f, 2.5f)(new Identifier(EternalStarlight.MODID, "lunar_monstrosity").toString()));
    public static final EntityType<StarlightGolemBeam> STARLIGHT_GOLEM_BEAM = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"starlight_golem_beam"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, StarlightGolemBeam::new).sized(0f, 0f)(new Identifier(EternalStarlight.MODID, "starlight_golem_beam").toString()));
    public static final EntityType<FireColumn> FIRE_COLUMN = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"fire_column"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, FireColumn::new).sized(0f, 0f)(new Identifier(EternalStarlight.MODID, "fire_column").toString()));
    public static final EntityType<Spore> SPORE = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"spore"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, Spore::new).sized(0.3f, 0.3f).clientTrackingRange(6).updateInterval(1)(new Identifier(EternalStarlight.MODID, "spore").toString()));
    public static final EntityType<Vine> VINE = Registry.register(Registries.ENTITY_TYPE,new Identifier(EternalStarlight.MODID,"vine"), FabricEntityTypeBuilder.create(SpawnGroup.MISC, Vine::new).dimensions(EntityDimensions.fixed(0.3f, 1f)).build());
}
